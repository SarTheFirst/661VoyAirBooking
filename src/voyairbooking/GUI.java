/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package voyairbooking;

import java.awt.Dimension;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JSpinner;
import javax.swing.SpinnerDateModel;

/**
 *
 * @author Shaun
 */
public class GUI extends javax.swing.JFrame {

    VoyAirBooking vab;

    /**
     * Creates new form GUI
     */
    public GUI() {
        this.vab = new VoyAirBooking();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        departingCityList = new javax.swing.JComboBox<>();
        deptartingCityText = new javax.swing.JLabel();
        ArrivalCItyText = new javax.swing.JLabel();
        destinationCityList = new javax.swing.JComboBox<>();
        arrivalTime = new JSpinner( new SpinnerDateModel() )
        ;
        departureTimeText = new javax.swing.JLabel();
        departTime = new JSpinner( new SpinnerDateModel() )
        ;
        arrivalTimeText = new javax.swing.JLabel();
        findFlightButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileDropdown = new javax.swing.JMenu();
        importDataMenuOption = new javax.swing.JMenuItem();
        exitOption = new javax.swing.JMenuItem();
        aboutDropdown = new javax.swing.JMenu();
        versionInfo = new javax.swing.JMenuItem();
        versionMenuOption = new javax.swing.JMenuItem();
        aboutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        DefaultComboBoxModel model = new DefaultComboBoxModel();
        departingCityList.setModel(model);
        departingCityList.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                departingCityListAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        deptartingCityText.setText("Departing City");

        ArrivalCItyText.setText("Arrival City");

        destinationCityList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        destinationCityList.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                destinationCityListAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        arrivalTime.setEditor(new JSpinner.DateEditor(arrivalTime, "HH:mm:ss"));
        arrivalTime.setValue(new Date());

        departureTimeText.setText("<html>When do you<br>want to leave?</html");

        departTime.setEditor(new JSpinner.DateEditor(departTime, "HH:mm:ss"));
        departTime.setValue(new Date());

        arrivalTimeText.setText("<html>When do you<br>want to arrive?</html");

        findFlightButton.setText("Find My Flight!");
        findFlightButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findFlightButtonActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        fileDropdown.setText("File");

        importDataMenuOption.setText("Import Data");
        importDataMenuOption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importDataMenuOptionActionPerformed(evt);
            }
        });
        fileDropdown.add(importDataMenuOption);

        exitOption.setText("Exit");
        exitOption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitOptionActionPerformed(evt);
            }
        });
        fileDropdown.add(exitOption);

        jMenuBar1.add(fileDropdown);

        aboutDropdown.setText("About");

        versionInfo.setText("Help");
        aboutDropdown.add(versionInfo);

        versionMenuOption.setText("Version Info");
        versionMenuOption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                versionMenuOptionActionPerformed(evt);
            }
        });
        aboutDropdown.add(versionMenuOption);

        aboutMenuItem.setText("About");
        aboutDropdown.add(aboutMenuItem);

        jMenuBar1.add(aboutDropdown);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(findFlightButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(deptartingCityText)
                            .addComponent(departureTimeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(departingCityList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(departTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(arrivalTimeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(arrivalTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ArrivalCItyText)
                                .addGap(18, 18, 18)
                                .addComponent(destinationCityList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(arrivalTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(departingCityList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(deptartingCityText)
                            .addComponent(ArrivalCItyText)
                            .addComponent(destinationCityList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(departureTimeText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(departTime, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(arrivalTimeText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(findFlightButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void importDataMenuOptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importDataMenuOptionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_importDataMenuOptionActionPerformed

    private void exitOptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitOptionActionPerformed
        System.exit(0);        // TODO add your handling code here:
    }//GEN-LAST:event_exitOptionActionPerformed

    private void departingCityListAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_departingCityListAncestorAdded
        addCities(departingCityList);
    }//GEN-LAST:event_departingCityListAncestorAdded

    private void destinationCityListAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_destinationCityListAncestorAdded
        addCities(destinationCityList);
    }//GEN-LAST:event_destinationCityListAncestorAdded

    private void versionMenuOptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_versionMenuOptionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_versionMenuOptionActionPerformed

    private void findFlightButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findFlightButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_findFlightButtonActionPerformed

    private void addCities(JComboBox<String> dropdown) {
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        dropdown.setModel(model);
        int maxSize = -1;
        ArrayList<String> cities = this.vab.vabTools.get_cities();
        for (String s : cities) {
            if (s.length() > maxSize) {
                maxSize = s.length();
            }
            model.addElement(s);
        }
        Dimension d = this.getSize();
        d.width += maxSize + 150; // [massive shrug of guestimation how this works]
        this.setSize(d);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        VoyAirBooking vab;
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ArrivalCItyText;
    private javax.swing.JMenu aboutDropdown;
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JSpinner arrivalTime;
    private javax.swing.JLabel arrivalTimeText;
    private javax.swing.JSpinner departTime;
    private javax.swing.JComboBox<String> departingCityList;
    private javax.swing.JLabel departureTimeText;
    private javax.swing.JLabel deptartingCityText;
    private javax.swing.JComboBox<String> destinationCityList;
    private javax.swing.JMenuItem exitOption;
    private javax.swing.JMenu fileDropdown;
    private javax.swing.JButton findFlightButton;
    private javax.swing.JMenuItem importDataMenuOption;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JMenuItem versionInfo;
    private javax.swing.JMenuItem versionMenuOption;
    // End of variables declaration//GEN-END:variables

    private void initComponents(VoyAirBooking vab) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
